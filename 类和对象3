#include <iostream>
using namespace std;

class Date
{
public:
	Date(int year = 0, int month = 1, int day = 1)
	{ 
		_year = year;
		_month = month;
		_day = day;
		
		
	}
	 Date(const Date& d)
	{
		if (this != &d)
		{
			_year = d._year;
			_month = d._month;
			_day = d._day;

		}
		
	}
	 Date& operator=(const Date& d)
	 {
		 if (this != &d)
		 {
			 _year = d._year;
			 _month = d._month;
			 _day = d._day;

		 }
		 return *this;
	 }
	void Print()
	{
		cout << _year << "_"<<_month<<"_"<<_day << endl;
		
	}
	bool operator>(const Date& d)
	{
		if (_year > d._year)
			return true;
		else if (_year == d._year && _month > d._month)
			return true;
		else if (_year == d._year && _month == d._month && _day > d._day)
			return true;
		else
		return false;
	}
	bool operator==(const Date& d)
	{
		return _year == d._year && _month == d._month && _day == d._day;
	}
	bool operator<=(const Date& d)
	{
		return !(*this > d) || *this == d;
	}
	bool operator<(const Date& d)
	{
		return !(*this>d);
	}
	bool operator!=(const Date& d)
	{
		return !(*this == d);
	}
	~Date()
	{
		cout << "~Date()" << endl;
	}
private:
	int _year;
	int _month;
	int _day;
};
//int main()
//{
//	Date d1;
//	Date d2;
//	Date d3(2020, 4, 11);
//	Date d4(d3);
//	return 0;
//}
class Stack
{
public:
	Stack(int n = 10)
	{
		_a = (int*)malloc(sizeof(int)*n);
		_size = 0;
		_capacity = n;

	}
	~Stack()
	{
		free(_a);
		_a = nullptr;
		_size = _capacity = 0;

	}
private:
	int* _a;
	size_t _size;
	size_t _capacity;

};
int main()
{
	Stack st;
	Date d1;
	Date d2;
	d1.Print();
	d1 = d2;
	Date d3(2021, 1, 17);
	d1 = d2 = d3;
	Date d4(d1);
	Date d5 = d1;
	d1.Print();
	d2.Print();
	d3.Print();
	d4.Print();
	d5.Print();
	return 0;
}
