#include <iostream>
#include <string>

namespace wuchong
{
	class string
	{
	public:
		string(const char* str = "")
		{
			if (nullptr == str)
			{
				str = "";
			}
			_str = new char[strlen(str) + 1];
			strcpy(_str, str);

		}
		/*string(const string& s)
			:_str(_str = new char[strlen(s._str) + 1])
		{
			strcpy(_str, s._str);
		}*/
		string(const string& s)
			:_str(nullptr)
		{
			string tmp(s._str);
			std::swap(_str, tmp._str);

		}
		/*string& operator=(string s)
		{
			if (_str != s._str)
			{
				delete[] _str;
				_str = new char[strlen(s._str) + 1];
				strcpy(_str, s._str);
			}
			
			return *this;
			
		}*/
		string& operator=(string s)
		{
			if (_str != s._str)
			{
				string tmp(s._str);
				std::swap(_str, tmp._str);
			}
			return *this;
		}
		char& operator[](size_t i)
		{

			return _str[i];
		}
		~string()
		{
			delete[] _str;
			_str = nullptr;
		}

	private:
		char* _str;

	};

}
